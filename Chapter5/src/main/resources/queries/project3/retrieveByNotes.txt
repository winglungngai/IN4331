declare function local:checkSong($song as node(), $notes as xs:string) as xs:boolean{
    let $pitches:=local:getPitch($song)
    return matches($pitches, $notes)
};

declare function local:getPitch($song as node()) as xs:string{
	let $pitches:=data($song/score-partwise/part/measure/note/pitch)
	let $pitchesString:=string-join($pitches)
	let $pitchesString:=replace(string($pitchesString), 'D-1', 'C1')
	let $pitchesString:=replace(string($pitchesString), 'E-1', 'D1')
	let $pitchesString:=replace(string($pitchesString), 'G-1', 'F1')
	let $pitchesString:=replace(string($pitchesString), 'A-1', 'G1')
	let $pitchesString:=replace(string($pitchesString), 'B-1', 'A1')
    
	return $pitchesString
};

declare function local:searchSongs($songs as node()*, $notes as xs:string*) as node()*{
    for $song in $songs where(local:checkSong($song, string-join($notes)))
    return $song
};

let $notes:="#userInput"
let $songs:=local:searchSongs(collection("/music/?*.xml"), $notes)
return
    <songs>{
for $song in $songs
return
        <song>
            <fileName>{util:document-name($song)}</fileName>
                {
                    for $credit in distinct-values($song/score-partwise/credit/credit-words)
                    return  <credit> { string($credit)} </credit>
                }
        </song>}
    </songs>
